# 默认的8080 我们将它改成 9090
server.port=9090
# 未定义上下文路径之前 地址是 http：//localhost：8080 定义了之后 http://localhost:9090
# server.servlet.context-path=/chapter1
# 关闭缓存模板
spring.thymeleaf.cache=false
# 自定义属性配置
myl.age=22
myl.name=dtl
# 切换多种环境（如：开发、测试、生产）
# spring.profiles.active=dev

# 连接数据库
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root

# 只要依赖了 Liquibase-core ，默认可以不做任何配置
# spring.liquibase.enabled=true
# spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml

# spring.datasource.type
# JPA 配置
spring.jpa.hibernate.ddl-auto=update
# 输出日志
spring.jpa.show-sql=true
# 数据库类型
spring.jpa.database=mysql

# 配置显示mybatis日志
logging.level.com.atdtl=debug
########## Mybatis 自身配置 ##########
## 注意注意
## classpath:com/atdtl/mapper/*.xml 需要自己在resource目录下创建mapper目录然后存放xml
mybatis.mapper-locations=classpath:com/atdtl/mapper/*.xml
mybatis.type-aliases-package=com.atdtl.entity
# 驼峰命名规范 如：数据库字段是  order_id 那么实体字段就要写成 orderId
# 开启驼峰命名规范后,比如xxx-mapper.xml中的resultMap 的映射可以省略掉
mybatis.configuration.map-underscore-to-camel-case=true

########## 通用Mapper ##########
# 主键自增回写方法，默认值MYSQL
mapper.identity=MYSQL
mapper.mappers=tk.mybatis.mapper.common.BaseMapper
# 设置 insert 和 update 中, 是否判断字符串类型 != ''
mapper.not-empty=true
# 枚举按简单类型处理
mapper.enum-as-simple-type=true
########## 分页插件 ##########
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true

########## 整合Redis ##########
spring.redis.host=localhost
spring.redis.password=root
# 连接超时时间
spring.redis.timeout=10000
# Redis默认有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=0
# 连接池最大连接数（使用负值表示无限制） 默认 -1
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示无限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

########## 集成Swagger在线调试 ##########
# 扫描包的路径
spring.swagger.base-package=com.atdtl
# 默认为true 生产环境可设置为false避免存在接口暴露的风险
spring.swagger.enabled=true

########## 整合RabbitMq ##########
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.host=192.168.1.181
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/
#手动ACK 不开启自动ACK模式 目的是防止报错后未正确处理消息丢失 默认
spring.rabbitmq.listener.simple.acknowledge-mode=manual

########## actuator服务监控与管理 ##########
# 描述信息
info.blog-url=http://www.atdtl.com
info.author=Yzh
info.version=@project.version@
info.name=@project.artifactId@
# 选择激活对应环境的配置，如果是dev则代表不同认证就能访问监控页，prod代表需要认证
spring.profiles.active=dev
# 日志文件
logging.file=./target/admin-server.log  
# 加载所有的端点 /默认只加载了 info/ health
management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/
management.endpoint.health.show-details=always
# 可以关闭制定的端点
management.endpoint.shutdown.enabled=false
# 映射路径,将 health 路劲映射成 rest_health 那么在反问health路径将为404，因为原路径已经变成 rest_health ， 一般情况下不建议使用
# 替换主机名
# management.endpoints.web.path-mapping.health=rest_health
spring.boot.admin.client.url=http://localhost:9090
spring.boot.admin.client.instance.prefer-ip=true

########## 文件上传 ##########
# 禁用 thymeleaf 缓存
# 是否支持批量文件上传（默认 true）
spring.servlet.multipart.enabled=true
# 上传文件的临时目录（一般情况下无需特意修改）
spring.servlet.multipart.location=
# 上传文件最大为 1M （默认值为 1M ,可根据自身业务进行调整）
spring.servlet.multipart.max-file-size=1048576
# 上传最大请求为 10M （默认值为 10M ,可根据自身业务进行调整）
spring.servlet.multipart.max-request-size=10485760
# 文件大小阈值，当大于这个文件阈值时将写入到磁盘中，否则存在内存中（默认值0，一般情况下无需特意修改）
spring.servlet.multipart.file-size-threshold=0
# 判断是否要延迟解析文件(相当于懒加载，一般情况下不需要特意修改)
spring.servlet.multipart.resolve-lazily=false

########## 配置redis ##########
spring.redis.host=192.168.1.181
spring.redis.port=6379
spring.redis.password=123456

